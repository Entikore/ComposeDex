name: Android CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]

env:
  API: 35

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run detekt
        run: ./gradlew detekt --stacktrace

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --stacktrace

      # API 30+ emulators only have x86_64 system images.
      - name: Get AVD info
        uses: ./.github/actions/get-avd-info
        id: avd-info
        with:
          api-level: ${{ env.API }}

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          profile: Nexus 4
          api-level: ${{ env.API }}
          arch: ${{ steps.avd-info.outputs.arch }}
          target: default
          script: mv .github/debug.keystore ~/.android; ./gradlew connectedDebugAndroidTest

      - name: Build with Gradle
        run: ./gradlew assembleDebug --build-cache --stacktrace

      - name: Collect artifacts
        run: |
          mkdir app/build/zip
          cp -r app/build/reports/tests/testDebugUnitTest app/build/zip/testReport
          cp -r app/build/reports/androidTests/connected/debug/ app/build/zip/androidTestReport
          cp -r app/build/outputs/apk/debug/app-debug.apk app/build/zip
          cp -r README.md app/build/zip
          cp -r LICENSE app/build/zip
          cp -r CHANGELOG.md app/build/zip

      - name: Upload build artifacts and test reports
        uses: actions/upload-artifact@v4
        with:
          name: composedex
          path: app/build/zip/

      - name: Set zip file name for release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo ZIP_FILE_NAME=ComposeDex-${{ github.ref_name }}.zip >> $GITHUB_ENV

      - name: Install zip
        if: startsWith(github.ref, 'refs/tags/')
        uses: montudor/action-zip@v1

      - name: Zip artifacts
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: app/build/zip
        run: |
          zip -qq -r ${{ env.ZIP_FILE_NAME }} .

      - name: Publish artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app/build/zip/${{ env.ZIP_FILE_NAME }}
            CHANGELOG.md
          body_path: CHANGELOG.md
